When would you want to use a remote repository rather than keeping all your work local?

Ans: When I'm working on a public project, or if I work on a project in which I want public contibutions. It can be a really helpful tool If I'm working on a group project, so that other members of my group may also freely contribute to the project work.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Ans: There may be multiple branches in my Github repo, in which I might not need to pull all of them. Thus, manually pulling changes gives a good control over branches. Plus, automatic updating may save irrelevant check points, but manually I can control when I need to pull the changes.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Ans: FORK: clones a repo present on Github into my Github account.
     CLONES : copies the whole repo from Github to local machine.
     BRANCH : A parallel copy of a repo created on local machine which can be edited without effecting the master branch.

What is the benefit of having a copy of the last known state of the remote stored locally?

Ans: Having a copy of the last known state of a remote can help us to trace the commits that were made into the repo. Plus, having the local copy gives the power to edit and make changes from the local machine, which may be pushed later.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Ans: The best way to collaborate that I can think of, without Git or Github, would be to use cloud service like dropbox or Google drive. This method will be way harder than Git or Github, since Git allows so much control of versions of a file, making and modifying changes, bug-fixing, and sharing files without losing previous content. Github is an extremely powerful tool, that would make collaborations much much easier.